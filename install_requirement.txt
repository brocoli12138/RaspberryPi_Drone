/*-------------pre-install software utilities-------------*/
sudo apt-get install -y libssl-dev openssl g++ git wget
sudo apt-get install -y doxygen graphviz cmake
sudo apt-get install -y libi2c-dev libi2c-tools 

/*-------------install MQTT broker-------------*/
https://www.emqx.com/en/downloads-and-install/broker?os=Ubuntu
sudo wget https://www.emqx.com/en/downloads/broker/5.8.4/emqx-5.8.4-elixir-ubuntu22.04-amd64.tar.gz
sudo mkdir -p emqx && sudo tar -zxvf emqx-5.8.4-elixir-ubuntu22.04-amd64.tar.gz -C emqx
sudo ./emqx/bin/emqx start

/*-------------set git proxy agent-------------*/
git config --global http.proxy "http://127.0.0.1:7890/"
git config --global https.proxy "http://127.0.0.1:7890/"

/*-------------install paho mqtt api-------------*/
git clone https://github.com/eclipse/paho.mqtt.cpp
cd paho.mqtt.cpp
git submodule init
git submodule update
sudo cmake -Bbuild -H. -DPAHO_WITH_MQTT_C=ON -DPAHO_BUILD_EXAMPLES=ON
sudo cmake --build build/ --target install


https://blog.csdn.net/ett_qin/article/details/84442998

/*-------------install libcamera and rpicamera-apps-------------*/
sudo apt-get install -y libboost-dev cmake
sudo apt-get install -y libgnutls28-dev pybind11-dev
sudo apt-get install -y qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5
sudo apt-get install -y meson
sudo apt-get install -y python3-yaml python3-ply
sudo apt-get install -y libglib2.0-dev libgstreamer-plugins-base1.0-dev
sudo apt-get install -y libboost-program-options-dev libdrm-dev libexif-dev
sudo apt-get install -y ninja-build
git clone https://github.com/raspberrypi/libcamera.git
cd libcamera
meson setup build --buildtype=release -Dpipelines=rpi/vc4,rpi/pisp -Dipas=rpi/vc4,rpi/pisp -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled -Ddocumentation=disabled -Dpycamera=enabled
*******You can disable the gstreamer plugin by replacing -Dgstreamer=enabled with -Dgstreamer=disabled during the meson build configuration. If you disable gstreamer, there is no need to install the libglib2.0-dev and libgstreamer-plugins-base1.0-dev dependencies.*******
ninja -C build
sudo ninja -C build install
*******On devices with 1GB of memory or less, the build may exceed available memory. Append the -j 1 flag to ninja commands to limit the build to a single process. This should prevent the build from exceeding available memory on devices like the Raspberry Pi Zero and the Raspberry Pi 3.*******
*******libcamera does not yet have a stable binary interface. Always build rpicam-apps after you build libcamera.*******
sudo mv /usr/local/include/libcamera/libcamera/* /usr/local/include/libcamera/ && sudo rm -r /usr/local/include/libcamera/libcamera
sudo apt-get -y install libavcodec-dev libavdevice-dev libavformat-dev libswresample-dev
sudo apt-get -y install libpng-dev libepoxy-dev libjpeg-dev libtiff-dev
git clone https://github.com/raspberrypi/rpicam-apps.git
cd rpicam-apps
meson setup build -Denable_libav=enabled -Denable_drm=enabled -Denable_egl=enabled -Denable_qt=enabled -Denable_opencv=disabled -Denable_tflite=disabled -Denable_hailo=disabled
*******Use -Dneon_flags=armv8-neon to enable optimisations for 32-bit OSes on Raspberry Pi 3 or Raspberry Pi 4.*******
*******Use -Denable_opencv=enabled if you have installed OpenCV and wish to use OpenCV-based post-processing stages.*******
*******Use -Denable_tflite=enabled if you have installed TensorFlow Lite and wish to use it in post-processing stages.*******
*******Use -Denable_hailo=enabled if you have installed HailoRT and wish to use it in post-processing stages.*******
meson compile -C build
sudo meson install -C build
sudo ldconfig
*******Run the following command to check that your device uses the new binary:*******
rpicam-still --version



/*-------------mqtt client compile and link-------------*/
g++ -o async_publish async_publish.cpp -lpaho-mqttpp3 -lpaho-mqtt3a -lpthread
******If you want to communicate over an encrypted channel, please add the following compile options:******
-lssl -lcrypto


brocoli@brocoli-desktop:/usr/lib/aarch64-linux-gnu$ rm libcamera.so
g++ Rpicameratest.cpp -o Rpicameratest -lcamera -lcamera_app -lboost_program_options -I.

/*-------------libcamera apps compile and link-------------*/
g++ -o libcamtests libcamtests.cpp -lcamera -lcamera-base

g++ Rpicameratest.cpp -o Rpicameratest -lcamera_app -I. not well

/*-------------install anaconda-------------*/
0c45:6725
https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Linux-x86_64.sh
conda config --set auto_activate_base false

/*-------------map the camera to wsl-------------*/
winget install usbipd
usbipd list
usbipd bind --busid 2-6
usbipd attach --wsl --busid 2-6
lsusb  // in wsl

/*-------------install libx264 to accelerate video transfer-------------*/
sudo apt-get install libx264-dev
g++ x264_demo.cpp -o x264_demo -lx264


ffmpeg -hide_banner -f v4l2 -list_formats all -i /dev/video0
ffmpeg -h encoder=libx264rgb
ffmpeg -codecs | grep 264

ffmpeg -s WIDTHxHEIGHT -pix_fmt yuv420p -i input.yuv -vframes 1 output.png

git checkout USBCameraCapture

camera support:
yuyv422      uyvy422       rgb565le 
rgb565be     gb555le       rgb555be        rgb24 
bgr24        0rgb          bayer_bggr8     bayer_gbrg8 
bayer_grbg8  bayer_rggb8   gray            gray16le 

libx264rgb
bgr0 bgr24 rgb24

libx264
yuv420p     yuvj420p  yuv422p  yuvj422p  yuv444p 
yuvj444p    nv12      nv16     nv21      yuv420p10le  yuv422p10le 
yuv444p10le nv20le    gray     gray10le

YUYV 4:2:2
UYVY 4:2:2
YVYU 4:2:2
VYUY 4:2:2
16-bit RGB 5-6-5
16-bit RGB 5-6-5 BE
16-bit A/XRGB 1-5-5-5
16-bit A/XRGB 1-5-5-5 BE
24-bit RGB 8-8-8
24-bit BGR 8-8-8
32-bit A/XRGB 8-8-8-8
8-bit Bayer BGBG/GRGR
8-bit Bayer GBGB/RGRG
8-bit Bayer GRGR/BGBG
8-bit Bayer RGRG/GBGB
10-bit Bayer BGBG/GRGR Packed
10-bit Bayer GBGB/RGRG Packed
10-bit Bayer GRGR/BGBG Packed
10-bit Bayer RGRG/GBGB Packed
12-bit Bayer BGBG/GRGR Packed
12-bit Bayer GBGB/RGRG Packed
12-bit Bayer GRGR/BGBG Packed
12-bit Bayer RGRG/GBGB Packed
14-bit Bayer BGBG/GRGR Packed
14-bit Bayer GBGB/RGRG Packed
14-bit Bayer GRGR/BGBG Packed
14-bit Bayer RGRG/GBGB Packed
16-bit Bayer BGBG/GRGR
16-bit Bayer GBGB/RGRG
16-bit Bayer GRGR/BGBG
16-bit Bayer RGRG/GBGB
PiSP Bayer Compressed Format
8-bit Greyscale
10-bit Greyscale (MIPI Packed)
12-bit Greyscale (MIPI Packed)
14-bit Greyscale (MIPI Packed)
16-bit Greyscale


Installing post_processing_stages/core-postproc.so to /usr/local/lib/aarch64-linux-gnu/rpicam-apps-postproc
Installing rpicam_app.so.1.6.0 to /usr/local/lib/aarch64-linux-gnu
Installing apps/rpicam-still to /usr/local/bin
Installing apps/rpicam-vid to /usr/local/bin
Installing apps/rpicam-hello to /usr/local/bin
Installing apps/rpicam-raw to /usr/local/bin
Installing apps/rpicam-jpeg to /usr/local/bin
Installing /home/brocoli/rpicam-apps/core/buffer_sync.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/completed_request.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/dma_heaps.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/frame_info.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/rpicam_app.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/rpicam_encoder.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/logging.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/metadata.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/options.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/post_processor.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/still_options.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/stream_info.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/version.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/core/video_options.hpp to /usr/local/include/rpicam-apps/core
Installing /home/brocoli/rpicam-apps/encoder/encoder.hpp to /usr/local/include/rpicam-apps/encoder
Installing /home/brocoli/rpicam-apps/encoder/h264_encoder.hpp to /usr/local/include/rpicam-apps/encoder
Installing /home/brocoli/rpicam-apps/encoder/mjpeg_encoder.hpp to /usr/local/include/rpicam-apps/encoder
Installing /home/brocoli/rpicam-apps/encoder/null_encoder.hpp to /usr/local/include/rpicam-apps/encoder
Installing /home/brocoli/rpicam-apps/encoder/libav_encoder.hpp to /usr/local/include/rpicam-apps/encoder
Installing /home/brocoli/rpicam-apps/image/image.hpp to /usr/local/include/rpicam-apps/image
Installing /home/brocoli/rpicam-apps/output/circular_output.hpp to /usr/local/include/rpicam-apps/output
Installing /home/brocoli/rpicam-apps/output/file_output.hpp to /usr/local/include/rpicam-apps/output
Installing /home/brocoli/rpicam-apps/output/net_output.hpp to /usr/local/include/rpicam-apps/output
Installing /home/brocoli/rpicam-apps/output/output.hpp to /usr/local/include/rpicam-apps/output
Installing /home/brocoli/rpicam-apps/preview/preview.hpp to /usr/local/include/rpicam-apps/preview
Installing /home/brocoli/rpicam-apps/post_processing_stages/histogram.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/post_processing_stages/object_detect.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/post_processing_stages/post_processing_stage.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/post_processing_stages/pwl.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/post_processing_stages/segmentation.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/post_processing_stages/tf_stage.hpp to /usr/local/include/rpicam-apps/post_processing_stages
Installing /home/brocoli/rpicam-apps/utils/camera-bug-report to /usr/local/bin
Installing /home/brocoli/rpicam-apps/assets/hdr.json to /usr/local/share/rpi-camera-assets
Installing /home/brocoli/rpicam-apps/assets/motion_detect.json to /usr/local/share/rpi-camera-assets
Installing /home/brocoli/rpicam-apps/assets/negate.json to /usr/local/share/rpi-camera-assets
Installing symlink pointing to rpicam_app.so.1.6.0 to /usr/local/lib/aarch64-linux-gnu/rpicam_app.so
Installing symlink pointing to rpicam-apps to /usr/local/include/libcamera-apps
Installing symlink pointing to rpicam_app.hpp to /usr/local/include/rpicam-apps/core/libcamera_app.h
Installing symlink pointing to rpicam_encoder.hpp to /usr/local/include/rpicam-apps/core/libcamera_encoder.h
Installing symlink pointing to rpicam_app.so to /usr/local/lib/aarch64-linux-gnu/libcamera_app.so
Installing symlink pointing to rpicam-still to /usr/local/bin/libcamera-still
Installing symlink pointing to rpicam-vid to /usr/local/bin/libcamera-vid
Installing symlink pointing to rpicam-hello to /usr/local/bin/libcamera-hello
Installing symlink pointing to rpicam-raw to /usr/local/bin/libcamera-raw
Installing symlink pointing to rpicam-jpeg to /usr/local/bin/libcamera-jpeg

[1:04:48.762051112] [14371]  INFO Camera camera_manager.cpp:327 libcamera v0.4.0+50-83cb8101
[1:04:48.783316453] [14372]  INFO RPI pisp.cpp:720 libpisp version v1.0.7 28196ed6edcf 28-01-2025 (01:27:19)
[1:04:48.886086479] [14372]  INFO RPI pisp.cpp:1179 Registered camera /base/axi/pcie@120000/rp1/i2c@88000/imx708@1a to CFE device /dev/media0 and ISP device /dev/media2 using PiSP variant BCM2712_C0
Overriding H.264 level 4.2
Preview window unavailable
[1:04:48.889157327] [14371]  WARN V4L2 v4l2_pixelformat.cpp:346 Unsupported V4L2 pixel format RPBP
Mode selection for 1920:1080:12:P(120)
    SRGGB10_CSI2P,1536x864/120.135 - Score: 2200
    SRGGB10_CSI2P,2304x1296/56.0255 - Score: 129099
    SRGGB10_CSI2P,4608x2592/14.3536 - Score: 213343
Stream configuration adjusted
[1:04:48.889362787] [14371]  INFO Camera camera.cpp:1202 configuring streams: (0) 1920x1080-YUV420 (1) 1536x864-BGGR_PISP_COMP1
[1:04:48.889449823] [14372]  INFO RPI pisp.cpp:1484 Sensor: /base/axi/pcie@120000/rp1/i2c@88000/imx708@1a - Selected sensor format: 1536x864-SBGGR10_1X10 - Selected CFE format: 1536x864-PC1B
[libx264 @ 0xaaaab7fcabe0] MB rate (979200) > level limit (522240)
[libx264 @ 0xaaaab7fcabe0] using cpu capabilities: ARMv8 NEON
[libx264 @ 0xaaaab7fcabe0] profile High, level 4.2, 4:2:0, 8-bit
Output #0, h264, to 'tcp://0.0.0.0:1234?listen=1':
  Stream #0:0: Video: h264, yuv420p(tv, bt709), 1920x1080, q=2-31, 120 fps, 120 tbr, 1000k tbn
    Side data:
      cpb: bitrate max/min/avg: 0/0/0 buffer size: 0 vbv_delay: N/A
1
1
stopped